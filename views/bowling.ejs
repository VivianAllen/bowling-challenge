<html>
<head>
</head>
<body>
  <script>
  // === frame === //
  function Frame () {
    this._rolls = [];
    this._rollsCap = 2;
    this._bonusRolls = [];
    this._bonusCap = 0;
    this._isSpare = false;
    this._isStrike = false;
    this._n;
  };

  // getters
  Frame.prototype.normalScore = function() {
    return this._rolls.reduce(function (sum, x) { return sum + x }, 0);
  };
  Frame.prototype.bonusScore = function() {
    return this._bonusRolls.reduce(function (sum, x) { return sum + x }, 0);
  };
  Frame.prototype.score = function() {
    return this.normalScore() + this.bonusScore();
  };
  Frame.prototype.isSpare = function() { return this._isSpare };
  Frame.prototype.isStrike = function() { return this._isStrike };
  Frame.prototype.n = function() { return this._n };
  Frame.prototype.nSet = function(nFrame) { this._n = nFrame };

  //setters
  Frame.prototype.roll = function(score) {
    if (!this.isFinished()) { this._rolls.push(score) };
    if (!this.isBonusFull()) { this._bonusRolls.push(score) };
    this.specials();
  };

  //checkers
  Frame.prototype.isFinished = function() { return this._rolls.length >= this._rollsCap };
  Frame.prototype.isBonusFull = function() { return this._bonusRolls.length >= this._bonusCap};
  Frame.prototype.isFullyFinished = function() { return this.isFinished() && this.isBonusFull()};
  Frame.prototype.specials = function() {
    this.checkStrike();
    this.checkSpare();
  };
  Frame.prototype.checkSpare = function() {
    if (this._rollsCap === 2 && this.normalScore() === 10) {
      this._isSpare = true;
      this._bonusCap = 1;
    };
  };
  Frame.prototype.checkStrike = function() {
    if (this._rolls[0] === 10 && !this.isStrike()) {
      this._isStrike = true;
      this._rollsCap = 1;
      this._bonusCap = 2;
    };
  };
  // === game === //
  function Game (frameConstructor) {
    this._frameConstructor = frameConstructor;
    this._frames = [new this._frameConstructor];
    this._frames[0].nSet(this._frames.length);
  };

  //getters
  Game.prototype.frames = function(){ return this._frames };
  Game.prototype.score = function(){
    return this._frames.reduce(function(e,x) { return e + x.score() }, 0);
  };
  //setters
  Game.prototype.roll = function(score) {
    if (this.isFinished()) { return };
    if (this._frames.slice(-1)[0].isFinished() && !this.isFrame10() ) {
      this._frames.push(new this._frameConstructor)
      this._nFrames++;
      this._frames.slice(-1)[0].nSet(this._nFrames);
    };
    this._frames.forEach (function (frame) { frame.roll(score) });
  }

  //checkers
  Game.prototype.isFinished = function(){
    return (this.isFrame10() && this._frames[9].isFullyFinished());
  };
  Game.prototype.isFrame10 = function(){ return this._frames.length === 10 };


  // === helpers === //
  var game
  function startGame(){
    var game = new Game (Frame);
    document.getElementById("msg").innerHTML = 'Game on!';
    document.getElementById("score").innerHTML = 'Total Score: ' + game.score();
    document.getElementById("score").style.display = 'block';
    return game;
  }


  </script>
  <h1 id='msg'>Welcome to Bowling!<h1>
  <div id = 'main'>
    <button onclick="game = startGame()">Start new game</button>
  </div>
  <h1 id=score style="display:none">Total Score: Not Started</h1>
</body>
</html>
